declare type ObserverCallback = (event?: 'unsupported' | 'intersect') => any;
interface Observer {
    add: (el: ObservedElement, cb: ObserverCallback) => void;
    remove: (el: ObservedElement) => void;
    supported: boolean;
}
declare const OBSERVER_ID_KEY = "__observer_id__";
declare type ObservedElement = Element & {
    [OBSERVER_ID_KEY]?: number | string;
};
export declare function getObserver(): Observer | false;
export declare function useObserver(el: ObservedElement, fn: ObserverCallback): Function;
export {};
